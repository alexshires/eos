<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classeos_1_1Mutable" kind="class" prot="public">
    <compoundname>eos::Mutable</compoundname>
    <derivedcompoundref refid="classeos_1_1Parameter" prot="public" virt="non-virtual">eos::Parameter</derivedcompoundref>
    <includes refid="mutable_8hh" local="no">mutable.hh</includes>
      <sectiondef kind="user-defined">
      <header>Basic Operatios</header>
      <description><para><anchor id="_1amgrpe14f7e6d89bed7e26b8b7aa00881ccfd"/> Destructor. </para></description>
      <memberdef kind="function" id="classeos_1_1Mutable_1a928ec6648a438f02b6369a8863d39560" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type></type>
        <definition>virtual eos::Mutable::~Mutable</definition>
        <argsstring>()=0</argsstring>
        <name>~Mutable</name>
        <briefdescription>
<para>Make a copy of this <ref refid="classeos_1_1Mutable" kindref="compound">Mutable</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="39"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1Mutable_1a31d51dbb25d02ad989592b43de8a787b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespaceeos_1a0ab446e6a801d96a1ee83bb7c070686f" kindref="member">MutablePtr</ref></type>
        <definition>virtual MutablePtr eos::Mutable::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classeos_1_1Parameter_1a8a643807f254a9601349c779cf6211dc">clone</reimplementedby>
        <briefdescription>
<para>Make a copy of this <ref refid="classeos_1_1Mutable" kindref="compound">Mutable</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access &amp; Modification of the numeric Value</header>
      <description><para><anchor id="_1amgrp90084f10ec361c9fc454efe770eda260"/> Cast a <ref refid="classeos_1_1Mutable" kindref="compound">Mutable</ref> to a double. </para></description>
      <memberdef kind="function" id="classeos_1_1Mutable_1a0763bf2933503db18d28b942aae2d324" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type></type>
        <definition>virtual eos::Mutable::operator double</definition>
        <argsstring>() const =0</argsstring>
        <name>operator double</name>
        <reimplementedby refid="classeos_1_1Parameter_1ad2dc69fe74e308328dc8a1d901c916ec">operator double</reimplementedby>
        <briefdescription>
<para>Retrieve a Mutable&apos;s numeric value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1Mutable_1a6efd15ab0164a1735813669506e331d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double eos::Mutable::operator()</definition>
        <argsstring>() const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classeos_1_1Parameter_1ada58e0206d67777a79bdd2bc0c806600">operator()</reimplementedby>
        <briefdescription>
<para>Retrieve a Mutable&apos;s numeric value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="50"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1Mutable_1abf079592435ecb22f242b7b01c279c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classeos_1_1Mutable" kindref="compound">Mutable</ref> &amp;</type>
        <definition>virtual const Mutable&amp; eos::Mutable::operator=</definition>
        <argsstring>(const double &amp;)=0</argsstring>
        <name>operator=</name>
        <reimplementedby refid="classeos_1_1Parameter_1aff29f9acdc90019e76239f6c81b4014a">operator=</reimplementedby>
        <param>
          <type>const double &amp;</type>
        </param>
        <briefdescription>
<para>Set a Mutable&apos;s numeric value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to Meta Data</header>
      <description><para><anchor id="_1amgrpa3a190e9d66c82f98a9d3e29998edf0d"/> Retrieve the Parameter&apos;s name. </para></description>
      <memberdef kind="function" id="classeos_1_1Mutable_1ad215a3863435593930a3543866881f49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string &amp;</type>
        <definition>virtual const std::string&amp; eos::Mutable::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classeos_1_1Parameter_1a86f581847722de0445ae65065940fd13">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all mutable entities, e.g. a <ref refid="classeos_1_1Parameter" kindref="compound">Parameter</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="687">
        <label>eos::Mutable</label>
        <link refid="classeos_1_1Mutable"/>
      </node>
      <node id="688">
        <label>eos::Parameter</label>
        <link refid="classeos_1_1Parameter"/>
        <childnode refid="687" relation="public-inheritance">
        </childnode>
      </node>
      <node id="689">
        <label>eos::UsedParameter</label>
        <link refid="classeos_1_1UsedParameter"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" line="34" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/mutable.hh" bodystart="33" bodyend="61"/>
    <listofallmembers>
      <member refid="classeos_1_1Mutable_1a31d51dbb25d02ad989592b43de8a787b" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>clone</name></member>
      <member refid="classeos_1_1Mutable_1ad215a3863435593930a3543866881f49" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>name</name></member>
      <member refid="classeos_1_1Mutable_1a0763bf2933503db18d28b942aae2d324" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>operator double</name></member>
      <member refid="classeos_1_1Mutable_1a6efd15ab0164a1735813669506e331d7" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>operator()</name></member>
      <member refid="classeos_1_1Mutable_1abf079592435ecb22f242b7b01c279c72" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>operator=</name></member>
      <member refid="classeos_1_1Mutable_1a928ec6648a438f02b6369a8863d39560" prot="public" virt="pure-virtual"><scope>eos::Mutable</scope><name>~Mutable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
