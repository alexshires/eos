<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="structeos_1_1TestObservable" kind="struct" prot="public">
    <compoundname>eos::TestObservable</compoundname>
    <basecompoundref refid="classeos_1_1Observable" prot="public" virt="non-virtual">eos::Observable</basecompoundref>
    <derivedcompoundref refid="structeos_1_1AbsoluteTestObservable" prot="public" virt="non-virtual">eos::AbsoluteTestObservable</derivedcompoundref>
    <includes refid="analysis__TEST_8hh" local="no">analysis_TEST.hh</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeos_1_1TestObservable_1ab06f6f24a04051ec2a8ebaa5d78ee953" prot="public" static="no" mutable="no">
        <type><ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref></type>
        <definition>Parameters eos::TestObservable::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="33" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeos_1_1TestObservable_1a58ef1eee27197c2bce21b2e576411a74" prot="public" static="no" mutable="no">
        <type><ref refid="classeos_1_1Kinematics" kindref="compound">Kinematics</ref></type>
        <definition>Kinematics eos::TestObservable::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="35" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeos_1_1TestObservable_1af9d523ad792f2ce3afa336f09d9226a6" prot="public" static="no" mutable="no">
        <type><ref refid="classeos_1_1Options" kindref="compound">Options</ref></type>
        <definition>Options eos::TestObservable::o</definition>
        <argsstring></argsstring>
        <name>o</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="37" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeos_1_1TestObservable_1aad5736b5692f43ccae60087154fd2132" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos::TestObservable::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="39" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeos_1_1TestObservable_1afa242c890fb7299876f30e8d01e218fc" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos::TestObservable::mass_name</definition>
        <argsstring></argsstring>
        <name>mass_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="39" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeos_1_1TestObservable_1a131b40b285edbecfd177becbbf66b601" prot="public" static="no" mutable="no">
        <type><ref refid="classeos_1_1UsedParameter" kindref="compound">UsedParameter</ref></type>
        <definition>UsedParameter eos::TestObservable::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="41" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeos_1_1TestObservable_1af44302acc1d97376ea453c133cf08c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eos::TestObservable::TestObservable</definition>
        <argsstring>(const Parameters &amp;p, const Kinematics &amp;k, const std::string &amp;mass_name)</argsstring>
        <name>TestObservable</name>
        <param>
          <type>const <ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classeos_1_1Kinematics" kindref="compound">Kinematics</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mass_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="50" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a1462125ba005e855c9127da2ce8c7f15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual eos::TestObservable::~TestObservable</definition>
        <argsstring>()</argsstring>
        <name>~TestObservable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="54" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a05f143463bc9a2cddec1ee2bdb8d5ba2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double eos::TestObservable::evaluate</definition>
        <argsstring>() const </argsstring>
        <name>evaluate</name>
        <reimplements refid="classeos_1_1Observable_1a913385d3a077d578bbcc2d502e5fdc2d">evaluate</reimplements>
        <reimplementedby refid="structeos_1_1AbsoluteTestObservable_1a47742fbfae1d0d8b57c09ee2a7501376">evaluate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="58" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a2ec70cb32b39215b3c3eafd05a94e1f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceeos_1a470e5dd806bd129080f1aa0c2954646f" kindref="member">ObservablePtr</ref></type>
        <definition>virtual ObservablePtr eos::TestObservable::clone</definition>
        <argsstring>() const </argsstring>
        <name>clone</name>
        <reimplements refid="classeos_1_1Observable_1a1c88c66a224a14fbddad70e95cb61136">clone</reimplements>
        <reimplementedby refid="structeos_1_1AbsoluteTestObservable_1ac509cca6dca7383653b2d0e5c387db07">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="63" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a40b0831f486d5a73e583becb0c6c9da4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceeos_1a470e5dd806bd129080f1aa0c2954646f" kindref="member">ObservablePtr</ref></type>
        <definition>virtual ObservablePtr eos::TestObservable::clone</definition>
        <argsstring>(const Parameters &amp;parameters) const </argsstring>
        <name>clone</name>
        <reimplements refid="classeos_1_1Observable_1a20e8218d04aa5589ce795ddd425751a0">clone</reimplements>
        <reimplementedby refid="structeos_1_1AbsoluteTestObservable_1af0a14d774c083598130b3062f956c4c9">clone</reimplementedby>
        <param>
          <type>const <ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref> &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="68" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1ab6aef566fbe0f34117da1d484e20da40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref></type>
        <definition>virtual Parameters eos::TestObservable::parameters</definition>
        <argsstring>()</argsstring>
        <name>parameters</name>
        <reimplements refid="classeos_1_1Observable_1a233852d22f287944b8bbf4da803289b1">parameters</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="73" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a87b7da05ef887b71fee092252a70a685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classeos_1_1Kinematics" kindref="compound">Kinematics</ref></type>
        <definition>virtual Kinematics eos::TestObservable::kinematics</definition>
        <argsstring>()</argsstring>
        <name>kinematics</name>
        <reimplements refid="classeos_1_1Observable_1a8bfd8cc2873e467ac9ae100d029d8c49">kinematics</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="78" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a6d762181ac0ce1d2d8ad9d377a3a565d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classeos_1_1Options" kindref="compound">Options</ref></type>
        <definition>virtual Options eos::TestObservable::options</definition>
        <argsstring>()</argsstring>
        <name>options</name>
        <reimplements refid="classeos_1_1Observable_1a237cf968a4f46a93e0cc8ba0fdbaceee">options</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="83" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1a1cc59da836d9dab76351b7afcbdb73f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; eos::TestObservable::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <reimplements refid="classeos_1_1Observable_1adfdc8fe469e00adeb464d3b3e4e14236">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="88" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1TestObservable_1ae4be408b4c96b6d86a080c966170b96b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eos::TestObservable::set_option</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value=&quot;&quot;)</argsstring>
        <name>set_option</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="93" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="92" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="959">
        <label>eos::Observable</label>
        <link refid="classeos_1_1Observable"/>
        <childnode refid="960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="958">
        <label>eos::TestObservable</label>
        <link refid="structeos_1_1TestObservable"/>
        <childnode refid="959" relation="public-inheritance">
        </childnode>
      </node>
      <node id="960">
        <label>eos::ParameterUser</label>
        <link refid="classeos_1_1ParameterUser"/>
      </node>
      <node id="961">
        <label>eos::AbsoluteTestObservable</label>
        <link refid="structeos_1_1AbsoluteTestObservable"/>
        <childnode refid="958" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="976">
        <label>eos::PrivateImplementationPattern&lt; Options &gt;</label>
        <link refid="classeos_1_1PrivateImplementationPattern"/>
      </node>
      <node id="972">
        <label>eos::PrivateImplementationPattern&lt; Parameters &gt;</label>
        <link refid="classeos_1_1PrivateImplementationPattern"/>
      </node>
      <node id="970">
        <label>eos::Mutable</label>
        <link refid="classeos_1_1Mutable"/>
      </node>
      <node id="966">
        <label>eos::Kinematics</label>
        <link refid="classeos_1_1Kinematics"/>
        <childnode refid="967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="963">
        <label>eos::Observable</label>
        <link refid="classeos_1_1Observable"/>
        <childnode refid="964" relation="public-inheritance">
        </childnode>
      </node>
      <node id="974">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="969">
        <label>eos::Parameter</label>
        <link refid="classeos_1_1Parameter"/>
        <childnode refid="970" relation="public-inheritance">
        </childnode>
      </node>
      <node id="962">
        <label>eos::TestObservable</label>
        <link refid="structeos_1_1TestObservable"/>
        <childnode refid="963" relation="public-inheritance">
        </childnode>
        <childnode refid="966" relation="usage">
          <edgelabel>k</edgelabel>
        </childnode>
        <childnode refid="968" relation="usage">
          <edgelabel>mass</edgelabel>
        </childnode>
        <childnode refid="971" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="973" relation="usage">
          <edgelabel>mass_name</edgelabel>
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="975" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
      </node>
      <node id="968">
        <label>eos::UsedParameter</label>
        <link refid="classeos_1_1UsedParameter"/>
        <childnode refid="969" relation="public-inheritance">
        </childnode>
      </node>
      <node id="965">
        <label>std::set&lt; Parameter::Id &gt;</label>
      </node>
      <node id="967">
        <label>eos::PrivateImplementationPattern&lt; Kinematics &gt;</label>
        <link refid="classeos_1_1PrivateImplementationPattern"/>
      </node>
      <node id="971">
        <label>eos::Parameters</label>
        <link refid="classeos_1_1Parameters"/>
        <childnode refid="972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="964">
        <label>eos::ParameterUser</label>
        <link refid="classeos_1_1ParameterUser"/>
        <childnode refid="965" relation="usage">
          <edgelabel>_ids</edgelabel>
        </childnode>
      </node>
      <node id="975">
        <label>eos::Options</label>
        <link refid="classeos_1_1Options"/>
        <childnode refid="976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="973">
        <label>std::string</label>
        <childnode refid="974" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" line="32" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/analysis_TEST.hh" bodystart="30" bodyend="96"/>
    <listofallmembers>
      <member refid="classeos_1_1ParameterUser_1aa3a0285297e16cf2a5830df1f9bb2f4b" prot="protected" virt="non-virtual"><scope>eos::TestObservable</scope><name>_ids</name></member>
      <member refid="classeos_1_1ParameterUser_1a9cd569207063cd2a8f807c4e1203a5d4" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>begin</name></member>
      <member refid="structeos_1_1TestObservable_1a2ec70cb32b39215b3c3eafd05a94e1f6" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>clone</name></member>
      <member refid="structeos_1_1TestObservable_1a40b0831f486d5a73e583becb0c6c9da4" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>clone</name></member>
      <member refid="classeos_1_1ParameterUser_1a7105631bbcb4b2492e6377b2b69f5b0f" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>ConstIterator</name></member>
      <member refid="classeos_1_1ParameterUser_1a5813c886f3fd3f074cc02a53fc9e0790" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>end</name></member>
      <member refid="structeos_1_1TestObservable_1a05f143463bc9a2cddec1ee2bdb8d5ba2" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>evaluate</name></member>
      <member refid="structeos_1_1TestObservable_1a58ef1eee27197c2bce21b2e576411a74" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>k</name></member>
      <member refid="structeos_1_1TestObservable_1a87b7da05ef887b71fee092252a70a685" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>kinematics</name></member>
      <member refid="classeos_1_1Observable_1a949bf84938bcc9ab75075801c636763c" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>make</name></member>
      <member refid="structeos_1_1TestObservable_1a131b40b285edbecfd177becbbf66b601" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>mass</name></member>
      <member refid="structeos_1_1TestObservable_1afa242c890fb7299876f30e8d01e218fc" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>mass_name</name></member>
      <member refid="structeos_1_1TestObservable_1aad5736b5692f43ccae60087154fd2132" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>n</name></member>
      <member refid="structeos_1_1TestObservable_1a1cc59da836d9dab76351b7afcbdb73f1" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>name</name></member>
      <member refid="structeos_1_1TestObservable_1af9d523ad792f2ce3afa336f09d9226a6" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>o</name></member>
      <member refid="structeos_1_1TestObservable_1a6d762181ac0ce1d2d8ad9d377a3a565d" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>options</name></member>
      <member refid="structeos_1_1TestObservable_1ab06f6f24a04051ec2a8ebaa5d78ee953" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>p</name></member>
      <member refid="structeos_1_1TestObservable_1ab6aef566fbe0f34117da1d484e20da40" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>parameters</name></member>
      <member refid="structeos_1_1TestObservable_1ae4be408b4c96b6d86a080c966170b96b" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>set_option</name></member>
      <member refid="structeos_1_1TestObservable_1af44302acc1d97376ea453c133cf08c02" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>TestObservable</name></member>
      <member refid="classeos_1_1ParameterUser_1ad91a901e589653272482bded7e453c70" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>uses</name></member>
      <member refid="classeos_1_1ParameterUser_1a7a37e779cf45ef1075fe7bf670688b72" prot="public" virt="non-virtual"><scope>eos::TestObservable</scope><name>uses</name></member>
      <member refid="structeos_1_1TestObservable_1a1462125ba005e855c9127da2ce8c7f15" prot="public" virt="virtual"><scope>eos::TestObservable</scope><name>~TestObservable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
