<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classeos_1_1proposal__functions_1_1Multivariate" kind="class" prot="public">
    <compoundname>eos::proposal_functions::Multivariate</compoundname>
    <basecompoundref refid="structeos_1_1MarkovChain_1_1ProposalFunction" prot="public" virt="non-virtual">eos::MarkovChain::ProposalFunction</basecompoundref>
    <derivedcompoundref refid="classeos_1_1proposal__functions_1_1MultivariateGaussian" prot="public" virt="non-virtual">eos::proposal_functions::MultivariateGaussian</derivedcompoundref>
    <derivedcompoundref refid="classeos_1_1proposal__functions_1_1MultivariateStudentT" prot="public" virt="non-virtual">eos::proposal_functions::MultivariateStudentT</derivedcompoundref>
    <includes refid="proposal__functions_8hh" local="no">proposal_functions.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeos_1_1proposal__functions_1_1Multivariate_1ae7eae33da3e528eea02bd653e83f865a" prot="public" static="no">
        <type><ref refid="classeos_1_1hdf5_1_1Array" kindref="compound">hdf5::Array</ref>&lt; 1, double &gt;</type>
        <definition>typedef hdf5::Array&lt;1, double&gt; eos::proposal_functions::Multivariate::CovarianceType</definition>
        <argsstring></argsstring>
        <name>CovarianceType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="399" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="399" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a642356a5bf54154da5730ffca4ee0c7f" prot="protected" static="no" mutable="no">
        <type>gsl_vector *</type>
        <definition>gsl_vector* eos::proposal_functions::Multivariate::_tmp_left</definition>
        <argsstring></argsstring>
        <name>_tmp_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="403" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a6a8e41ac55083ca3eebbfc65dce32b5e" prot="protected" static="no" mutable="no">
        <type>gsl_vector *</type>
        <definition>gsl_vector* eos::proposal_functions::Multivariate::_tmp_right</definition>
        <argsstring></argsstring>
        <name>_tmp_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="404" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a37d4d1ebe9b21fb87da6976d7b08f962" prot="protected" static="no" mutable="no">
        <type>gsl_matrix *</type>
        <definition>gsl_matrix* eos::proposal_functions::Multivariate::_tmp_sample_covariance_current</definition>
        <argsstring></argsstring>
        <name>_tmp_sample_covariance_current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="405" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1ad563d0d650e7cbd130c0229440c172fe" prot="protected" static="no" mutable="no">
        <type>gsl_matrix *</type>
        <definition>gsl_matrix* eos::proposal_functions::Multivariate::_covariance</definition>
        <argsstring></argsstring>
        <name>_covariance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="407" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a91646502fcd9f17890b08ff8928e36f3" prot="protected" static="no" mutable="no">
        <type>gsl_matrix *</type>
        <definition>gsl_matrix* eos::proposal_functions::Multivariate::_covariance_inverse</definition>
        <argsstring></argsstring>
        <name>_covariance_inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="408" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a4ed7faa7ef374c0b6fbc065a45ce34d3" prot="protected" static="no" mutable="no">
        <type>gsl_matrix *</type>
        <definition>gsl_matrix* eos::proposal_functions::Multivariate::_covariance_chol</definition>
        <argsstring></argsstring>
        <name>_covariance_chol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="409" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1ab5e327644edef3b9c8658e2cdd3d2772" prot="protected" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned eos::proposal_functions::Multivariate::_dimension</definition>
        <argsstring></argsstring>
        <name>_dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="411" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a6626ace5861eeba7b92ea9ed4c6095ee" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>std::vector&lt;unsigned&gt; eos::proposal_functions::Multivariate::_index_list</definition>
        <argsstring></argsstring>
        <name>_index_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="413" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="413" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a67c47eeeefc2f0027cab513f50a402a2" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned eos::proposal_functions::Multivariate::adaptations</definition>
        <argsstring></argsstring>
        <name>adaptations</name>
        <briefdescription>
<para>Record how often an adaption to data has been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="425" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1ab52678a7403bae09d3db8f2247c02e17" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::proposal_functions::Multivariate::covariance_scale</definition>
        <argsstring></argsstring>
        <name>covariance_scale</name>
        <briefdescription>
<para>Rescale the sample _covariance to form the proposal _covariance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="430" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1aabab67ba765f532effe6dd8236d69cdd" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::proposal_functions::Multivariate::cooling_power</definition>
        <argsstring></argsstring>
        <name>cooling_power</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combinining the proposal _covariance of this and the previous step, limit the effect of samples in the distant past by forming a weighted average. In the n-th step,</para><para>= (1 - 1/n^{cooling_power})  + 1/n^{cooling_power} * S_n</para><para>cf. arxiv:0903.0837, Eq. (23) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="449" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a6ca72be11badd000f8d36a80c131b5d4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::proposal_functions::Multivariate::norm</definition>
        <argsstring></argsstring>
        <name>norm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="451" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="451" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1afd2de46a2288413f8e06c1f197b71ec2" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double eos::proposal_functions::Multivariate::covariance_scale_min</definition>
        <argsstring></argsstring>
        <name>covariance_scale_min</name>
        <briefdescription>
<para>Scale enforced to exceed a minimum value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="433" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1ab974d2da4b3dfcb7278418a25b07dd51" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double eos::proposal_functions::Multivariate::covariance_scale_max</definition>
        <argsstring></argsstring>
        <name>covariance_scale_max</name>
        <briefdescription>
<para>Scale enforced to lie below a maximum value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="435" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1_1proposal__functions_1_1Multivariate_1a69c7f79624af473004a147598d9afaa1" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double eos::proposal_functions::Multivariate::covariance_scale_update_factor</definition>
        <argsstring></argsstring>
        <name>covariance_scale_update_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>During an adaptation, the scale is multiplied/divided by this factor if the efficiency is too high/low . </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="438" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="438" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a4b7778284ee0ba2ea1ff85df8844da6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1hdf5_1_1Array" kindref="compound">CovarianceType</ref></type>
        <definition>static CovarianceType eos::proposal_functions::Multivariate::covariance_type</definition>
        <argsstring>(const unsigned &amp;dimension)</argsstring>
        <name>covariance_type</name>
        <param>
          <type>const unsigned &amp;</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1ad5a7764646a0c216344d96be9f01655b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::proposal_functions::Multivariate::_compute_cholesky_and_inverse</definition>
        <argsstring>()</argsstring>
        <name>_compute_cholesky_and_inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="415"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a284a17764a486687d3d1f2aee1a3bf3c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void eos::proposal_functions::Multivariate::_compute_norm</definition>
        <argsstring>()=0</argsstring>
        <name>_compute_norm</name>
        <reimplementedby refid="classeos_1_1proposal__functions_1_1MultivariateStudentT_1aa44fa5958d242f5aae93c0dfa4cb8d84">_compute_norm</reimplementedby>
        <reimplementedby refid="classeos_1_1proposal__functions_1_1MultivariateGaussian_1ac797f04a7bce3b029cfc32af0d6ecd07">_compute_norm</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="416"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a33c4b4ed443dc77bb376636636f11b88" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::proposal_functions::Multivariate::_copy</definition>
        <argsstring>(const Multivariate &amp;)</argsstring>
        <name>_copy</name>
        <param>
          <type>const <ref refid="classeos_1_1proposal__functions_1_1Multivariate" kindref="compound">Multivariate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="417"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a4b45f19e0d4da4ed2c519d8a1d504fd2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::proposal_functions::Multivariate::_dump_covariance</definition>
        <argsstring>(hdf5::File &amp;file, const std::string &amp;data_set_base_name, const std::string &amp;proposal_type_name) const </argsstring>
        <name>_dump_covariance</name>
        <param>
          <type><ref refid="classeos_1_1hdf5_1_1File" kindref="compound">hdf5::File</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data_set_base_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>proposal_type_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1aa7a6807a556a5187c77080d6b2036deb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned eos::proposal_functions::Multivariate::dimension</definition>
        <argsstring>() const </argsstring>
        <name>dimension</name>
        <briefdescription>
<para>The dimension of the space for which samples are proposed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="422"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a54a59c24424caeb5e826d61d63edd95d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const gsl_matrix *</type>
        <definition>const gsl_matrix* eos::proposal_functions::Multivariate::covariance</definition>
        <argsstring>() const </argsstring>
        <name>covariance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="427"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a0f3a2171c1b20ef0f4cb4588185981aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eos::proposal_functions::Multivariate::Multivariate</definition>
        <argsstring>(const unsigned &amp;dimension, const std::vector&lt; double &gt; &amp;covariance, const bool &amp;automatic_scaling)</argsstring>
        <name>Multivariate</name>
        <param>
          <type>const unsigned &amp;</type>
          <declname>dimension</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>covariance</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>automatic_scaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct with given dimension and an initial proposal covariance matrix. If automatic scaling is desired, the given matrix is interpreted as an estimate of the target covariance, and it is rescaled by a factor of 2.38^2 / dimension. Else is the matrix is used as is for proposing points.</para><para><simplesect kind="note"><para>The automatic scaling can be shown to lead to the asymptotically (!) perfect value of the efficiency of 0.238 for a Gaussian proposal and a Gaussian target density with unlimited parameter ranges. These requirements are usually not fullfilled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="465"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a2b216d8b68102068c721f758d562485d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual eos::proposal_functions::Multivariate::~Multivariate</definition>
        <argsstring>()</argsstring>
        <name>~Multivariate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="467"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a03a15f539c8b7eeefb7e323d8c3cd15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos::proposal_functions::Multivariate::adapt</definition>
        <argsstring>(const MarkovChain::State::Iterator &amp;begin, const MarkovChain::State::Iterator &amp;end, const double &amp;efficiency, const double &amp;efficiency_min, const double &amp;efficiency_max)</argsstring>
        <name>adapt</name>
        <reimplements refid="structeos_1_1MarkovChain_1_1ProposalFunction_1afee6a937c53b9cfb257a5cd724a54296">adapt</reimplements>
        <param>
          <type>const <ref refid="structeos_1_1MarkovChain_1_1State_1ad7590843e4feca7e696c53863e6e10c1" kindref="member">MarkovChain::State::Iterator</ref> &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const <ref refid="structeos_1_1MarkovChain_1_1State_1ad7590843e4feca7e696c53863e6e10c1" kindref="member">MarkovChain::State::Iterator</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>efficiency</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>efficiency_min</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>efficiency_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Expect history to have only the most recent part, to which proposal function has not adapted yet. Accordingly, the efficiency of that last part is required. Do not push the entire history of a chain in here repeatedly! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="476"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a5f1d1b34460d12e1446dc5ff0fa714ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos::proposal_functions::Multivariate::rescale</definition>
        <argsstring>(const double &amp;rescale_factor)</argsstring>
        <name>rescale</name>
        <param>
          <type>const double &amp;</type>
          <declname>rescale_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale the covariance scale factor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rescale_factor</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="482"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1a830b00fd34f3b65922eeef04d76269e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos::proposal_functions::Multivariate::reset</definition>
        <argsstring>(const std::vector&lt; HistoryPtr &gt; &amp;histories, const double &amp;scale, const double &amp;skip_initial)</argsstring>
        <name>reset</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceeos_1ac9f30fde04446cfabdd69d4b5b5d3c5a" kindref="member">HistoryPtr</ref> &gt; &amp;</type>
          <declname>histories</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>skip_initial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the internal covariance to zero, and recompute it from the histories given. Apply a new scale factor for proposals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>histories</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="490"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1proposal__functions_1_1Multivariate_1ac143e4c3d64075a86a6aa837d187d134" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos::proposal_functions::Multivariate::set_indices</definition>
        <argsstring>(const std::vector&lt; unsigned &gt; &amp;index_list)</argsstring>
        <name>set_indices</name>
        <param>
          <type>const std::vector&lt; unsigned &gt; &amp;</type>
          <declname>index_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an index list, such that the proposal will consider only a subspace for it covariance calculation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="664">
        <label>eos::MarkovChain::ProposalFunction</label>
        <link refid="structeos_1_1MarkovChain_1_1ProposalFunction"/>
      </node>
      <node id="666">
        <label>eos::proposal_functions::MultivariateStudentT</label>
        <link refid="classeos_1_1proposal__functions_1_1MultivariateStudentT"/>
        <childnode refid="663" relation="public-inheritance">
        </childnode>
      </node>
      <node id="663">
        <label>eos::proposal_functions::Multivariate</label>
        <link refid="classeos_1_1proposal__functions_1_1Multivariate"/>
        <childnode refid="664" relation="public-inheritance">
        </childnode>
      </node>
      <node id="665">
        <label>eos::proposal_functions::MultivariateGaussian</label>
        <link refid="classeos_1_1proposal__functions_1_1MultivariateGaussian"/>
        <childnode refid="663" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="668">
        <label>eos::MarkovChain::ProposalFunction</label>
        <link refid="structeos_1_1MarkovChain_1_1ProposalFunction"/>
      </node>
      <node id="667">
        <label>eos::proposal_functions::Multivariate</label>
        <link refid="classeos_1_1proposal__functions_1_1Multivariate"/>
        <childnode refid="668" relation="public-inheritance">
        </childnode>
        <childnode refid="669" relation="usage">
          <edgelabel>_index_list</edgelabel>
        </childnode>
      </node>
      <node id="669">
        <label>std::vector&lt; unsigned &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" line="397" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/proposal_functions.hh" bodystart="395" bodyend="497"/>
    <listofallmembers>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ad5a7764646a0c216344d96be9f01655b" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_compute_cholesky_and_inverse</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a284a17764a486687d3d1f2aee1a3bf3c" prot="protected" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_compute_norm</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a33c4b4ed443dc77bb376636636f11b88" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_copy</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ad563d0d650e7cbd130c0229440c172fe" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_covariance</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a4ed7faa7ef374c0b6fbc065a45ce34d3" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_covariance_chol</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a91646502fcd9f17890b08ff8928e36f3" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_covariance_inverse</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ab5e327644edef3b9c8658e2cdd3d2772" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_dimension</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a4b45f19e0d4da4ed2c519d8a1d504fd2" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_dump_covariance</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a6626ace5861eeba7b92ea9ed4c6095ee" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_index_list</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a642356a5bf54154da5730ffca4ee0c7f" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_tmp_left</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a6a8e41ac55083ca3eebbfc65dce32b5e" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_tmp_right</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a37d4d1ebe9b21fb87da6976d7b08f962" prot="protected" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>_tmp_sample_covariance_current</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a03a15f539c8b7eeefb7e323d8c3cd15d" prot="public" virt="virtual"><scope>eos::proposal_functions::Multivariate</scope><name>adapt</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a67c47eeeefc2f0027cab513f50a402a2" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>adaptations</name></member>
      <member refid="structeos_1_1MarkovChain_1_1ProposalFunction_1a7065079985f8bb44309d7773d85d225b" prot="public" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>clone</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1aabab67ba765f532effe6dd8236d69cdd" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>cooling_power</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a54a59c24424caeb5e826d61d63edd95d" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ab52678a7403bae09d3db8f2247c02e17" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance_scale</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ab974d2da4b3dfcb7278418a25b07dd51" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance_scale_max</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1afd2de46a2288413f8e06c1f197b71ec2" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance_scale_min</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a69c7f79624af473004a147598d9afaa1" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance_scale_update_factor</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a4b7778284ee0ba2ea1ff85df8844da6e" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>covariance_type</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ae7eae33da3e528eea02bd653e83f865a" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>CovarianceType</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1aa7a6807a556a5187c77080d6b2036deb" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>dimension</name></member>
      <member refid="structeos_1_1MarkovChain_1_1ProposalFunction_1aea88a1340e10cc6a5b03d8b5483774f7" prot="public" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>dump_state</name></member>
      <member refid="structeos_1_1MarkovChain_1_1ProposalFunction_1ae3f2c43980ec9dfe9f35d8139f2f4ec7" prot="public" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>evaluate</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a0f3a2171c1b20ef0f4cb4588185981aa" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>Multivariate</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a6ca72be11badd000f8d36a80c131b5d4" prot="public" virt="non-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>norm</name></member>
      <member refid="structeos_1_1MarkovChain_1_1ProposalFunction_1a2b296008d32b1cd008e59cde1228705f" prot="public" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>propose</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a5f1d1b34460d12e1446dc5ff0fa714ee" prot="public" virt="virtual"><scope>eos::proposal_functions::Multivariate</scope><name>rescale</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a830b00fd34f3b65922eeef04d76269e9" prot="public" virt="virtual"><scope>eos::proposal_functions::Multivariate</scope><name>reset</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1ac143e4c3d64075a86a6aa837d187d134" prot="public" virt="virtual"><scope>eos::proposal_functions::Multivariate</scope><name>set_indices</name></member>
      <member refid="classeos_1_1proposal__functions_1_1Multivariate_1a2b216d8b68102068c721f758d562485d" prot="public" virt="virtual"><scope>eos::proposal_functions::Multivariate</scope><name>~Multivariate</name></member>
      <member refid="structeos_1_1MarkovChain_1_1ProposalFunction_1a758ad6e18e36b15062fe776ee7a9b3d9" prot="public" virt="pure-virtual"><scope>eos::proposal_functions::Multivariate</scope><name>~ProposalFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
