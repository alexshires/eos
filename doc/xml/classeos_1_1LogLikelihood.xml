<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classeos_1_1LogLikelihood" kind="class" prot="public">
    <compoundname>eos::LogLikelihood</compoundname>
    <basecompoundref refid="classeos_1_1PrivateImplementationPattern" prot="public" virt="non-virtual">eos::PrivateImplementationPattern&lt; LogLikelihood &gt;</basecompoundref>
    <includes refid="log__likelihood_8hh" local="no">log_likelihood.hh</includes>
      <sectiondef kind="user-defined">
      <header>Iteration and Access</header>
      <description><para><anchor id="_1amgrp518e849dad280496b3dba5bda3151948"/> </para></description>
      <memberdef kind="typedef" id="classeos_1_1LogLikelihood_1a48b422865426d34047c9757e2d5f4f92" prot="public" static="no">
        <type><ref refid="classeos_1_1WrappedForwardIterator" kindref="compound">WrappedForwardIterator</ref>&lt; ConstraintIteratorTag, <ref refid="classeos_1_1Constraint" kindref="compound">Constraint</ref> &gt;</type>
        <definition>typedef WrappedForwardIterator&lt;ConstraintIteratorTag, Constraint&gt; eos::LogLikelihood::ConstraintIterator</definition>
        <argsstring></argsstring>
        <name>ConstraintIterator</name>
        <briefdescription>
<para>Iterator to the first constraint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="345" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1aa016da72e3b65c8a4ed58cebf1f50863" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1WrappedForwardIterator" kindref="compound">ConstraintIterator</ref></type>
        <definition>ConstraintIterator eos::LogLikelihood::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Iterator to the first constraint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="348"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a15bf635f6541e9fb16463c5dbb4b462b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1WrappedForwardIterator" kindref="compound">ConstraintIterator</ref></type>
        <definition>ConstraintIterator eos::LogLikelihood::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Iterator pointing past the last constraint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="351"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic Functions</header>
      <description><para><anchor id="_1amgrp2386c9a1f1785edee33f374dd2db9b3d"/> </para></description>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1aaa2ab4108cc72397704139e01aca6316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eos::LogLikelihood::LogLikelihood</definition>
        <argsstring>(const Parameters &amp;parameters)</argsstring>
        <name>LogLikelihood</name>
        <param>
          <type>const <ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref> &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref> object to which all further ObservablePtr objects must be bound. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="313"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1ad6f6ff2a71df17599e033681d64fe454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eos::LogLikelihood::~LogLikelihood</definition>
        <argsstring>()</argsstring>
        <name>~LogLikelihood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="318"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access and evaluation</header>
      <description><para><anchor id="_1amgrp6134b2a17e0234f8ef026e8f586768aa"/> </para></description>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a236d8123a08805e1d825ca262bada0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::LogLikelihood::add</definition>
        <argsstring>(const ObservablePtr &amp;observable, const double &amp;min, const double &amp;central, const double &amp;max, const unsigned &amp;number_of_observations=1u)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="namespaceeos_1a470e5dd806bd129080f1aa0c2954646f" kindref="member">ObservablePtr</ref> &amp;</type>
          <declname>observable</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>central</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>number_of_observations</declname>
          <defval>1u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an observable and its associated measurement.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classeos_1_1Observable" kindref="compound">Observable</ref> that shall be added to the calculation of the likelihood. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound on the measurement. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>central</parametername>
</parameternamelist>
<parameterdescription>
<para>The central value of the measurement. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound on the measurement. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number_of_observations</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of observations associated with the measurement. Defaults to 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="333"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1ac1fd5ffc7ace637eab0d8a3fa5cb7463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::LogLikelihood::add</definition>
        <argsstring>(const Constraint &amp;constraint)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classeos_1_1Constraint" kindref="compound">Constraint</ref> &amp;</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one of the libraries experimental constraints.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>constraint</parametername>
</parameternamelist>
<parameterdescription>
<para>The experimental constraint, cf. <ref refid="classeos_1_1Constraint_1a5084265f8e196296a885089cf710c096" kindref="member">Constraint::make</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="340"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a51cd04019887511f540be75b4ef9ec7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; eos::LogLikelihood::bootstrap_p_value</definition>
        <argsstring>(const unsigned &amp;datasets)</argsstring>
        <name>bootstrap_p_value</name>
        <param>
          <type>const unsigned &amp;</type>
          <declname>datasets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate a p-value based on the ^2 test statistic for the current setting of the parameters. <simplesect kind="note"><para>The p-value is _not_ corrected for degrees of freedom. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>datasets</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of simulated data sets </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;p-value, uncertainty&gt;, where the uncertainty is estimated from the standard posterior for a Bernoulli experiment. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="363"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a0aed658b79b9915a79ceba3a2fe10509" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1LogLikelihood" kindref="compound">LogLikelihood</ref></type>
        <definition>LogLikelihood eos::LogLikelihood::clone</definition>
        <argsstring>() const </argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an independent instance of this <ref refid="classeos_1_1LogLikelihood" kindref="compound">LogLikelihood</ref> that uses the same set of observables and measurements. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="368"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1af9fe6dbe66c827e44bc500d3f2a94a6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned eos::LogLikelihood::number_of_observations</definition>
        <argsstring>() const </argsstring>
        <name>number_of_observations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of independent observations used in the likelihood. <simplesect kind="note"><para>This may differ from the number of observables in case two experiments reported their results on the same observable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="375"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1abf5c017096b99502c3bafb47a6297852" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref></type>
        <definition>Parameters eos::LogLikelihood::parameters</definition>
        <argsstring>() const </argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the underlying <ref refid="classeos_1_1Parameters" kindref="compound">Parameters</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="380"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a3dc64fa5ee57da08f90eb18acd5bb8dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeos_1_1ObservableCache" kindref="compound">ObservableCache</ref></type>
        <definition>ObservableCache eos::LogLikelihood::observable_cache</definition>
        <argsstring>() const </argsstring>
        <name>observable_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the cache of observables associated with this <ref refid="classeos_1_1LogLikelihood" kindref="compound">LogLikelihood</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="385"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a3852b27cbc7bc0254c9323dfedf31576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::LogLikelihood::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the log likelihood, i.e., return <formula id="1">\[ \log \mathcal{L} = \log P(D | \vec{\theta}, M)= - \frac{\chi^2}{2} + C\]</formula>. <simplesect kind="note"><para>: all observables are recalculated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="391"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a289c5a378c31d4d05f4dc04af256cc84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::LogLikelihood::operator()</definition>
        <argsstring>(const Parameter::Id &amp;id)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classeos_1_1Parameter_1a065f55e66b2128cc5f14339e676d833a" kindref="member">Parameter::Id</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the likelihood, but recalculate only those observables which depend on the parameter with the given id</para><para><simplesect kind="warning"><para>Do not use this call before __all__ observables have been added to the likelihood! Since the dependence is checked only the first time a parameter id is encountered, adding an observable later will not establish the link between the id and the observable, leading to incorrect values of the likelihood </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="402"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1_1LogLikelihood_1a43d24e99c8f7e4209e6bb763186123d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::LogLikelihood::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reload previous observable values.</para><para><simplesect kind="note"><para>this is only useful in conjunction with operator()(const Parameter&amp; par) and the Markov Chain sampler </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="410"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classeos_1_1LogLikelihood" kindref="compound">LogLikelihood</ref> handles a set of ObservablePtr with associated measurement data.</para><para>Access to any <ref refid="classeos_1_1LogLikelihood" kindref="compound">LogLikelihood</ref> is coherent, i.e., changes to one object will propagate to every other object copy. To create an independent instance, use <ref refid="classeos_1_1LogLikelihood_1a0aed658b79b9915a79ceba3a2fe10509" kindref="member">clone()</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="589">
        <label>eos::PrivateImplementationPattern&lt; LogLikelihood &gt;</label>
        <link refid="classeos_1_1PrivateImplementationPattern"/>
      </node>
      <node id="588">
        <label>eos::LogLikelihood</label>
        <link refid="classeos_1_1LogLikelihood"/>
        <childnode refid="589" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="591">
        <label>eos::PrivateImplementationPattern&lt; LogLikelihood &gt;</label>
        <link refid="classeos_1_1PrivateImplementationPattern"/>
      </node>
      <node id="590">
        <label>eos::LogLikelihood</label>
        <link refid="classeos_1_1LogLikelihood"/>
        <childnode refid="591" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" line="303" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/log_likelihood.hh" bodystart="301" bodyend="412"/>
    <listofallmembers>
      <member refid="classeos_1_1PrivateImplementationPattern_1a232940e78b26c6ed4f97196f831c69c9" prot="protected" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>_imp</name></member>
      <member refid="classeos_1_1LogLikelihood_1a236d8123a08805e1d825ca262bada0c8" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>add</name></member>
      <member refid="classeos_1_1LogLikelihood_1ac1fd5ffc7ace637eab0d8a3fa5cb7463" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>add</name></member>
      <member refid="classeos_1_1LogLikelihood_1aa016da72e3b65c8a4ed58cebf1f50863" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>begin</name></member>
      <member refid="classeos_1_1LogLikelihood_1a51cd04019887511f540be75b4ef9ec7a" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>bootstrap_p_value</name></member>
      <member refid="classeos_1_1LogLikelihood_1a0aed658b79b9915a79ceba3a2fe10509" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>clone</name></member>
      <member refid="classeos_1_1LogLikelihood_1a48b422865426d34047c9757e2d5f4f92" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>ConstraintIterator</name></member>
      <member refid="classeos_1_1LogLikelihood_1a15bf635f6541e9fb16463c5dbb4b462b" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>end</name></member>
      <member refid="classeos_1_1LogLikelihood_1aaa2ab4108cc72397704139e01aca6316" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>LogLikelihood</name></member>
      <member refid="classeos_1_1LogLikelihood_1af9fe6dbe66c827e44bc500d3f2a94a6a" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>number_of_observations</name></member>
      <member refid="classeos_1_1LogLikelihood_1a3dc64fa5ee57da08f90eb18acd5bb8dd" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>observable_cache</name></member>
      <member refid="classeos_1_1LogLikelihood_1a3852b27cbc7bc0254c9323dfedf31576" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>operator()</name></member>
      <member refid="classeos_1_1LogLikelihood_1a289c5a378c31d4d05f4dc04af256cc84" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>operator()</name></member>
      <member refid="classeos_1_1LogLikelihood_1abf5c017096b99502c3bafb47a6297852" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>parameters</name></member>
      <member refid="classeos_1_1PrivateImplementationPattern_1a3e3d5f4a565256a1dda6c234b051b2f2" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>PrivateImplementationPattern</name></member>
      <member refid="classeos_1_1LogLikelihood_1a43d24e99c8f7e4209e6bb763186123d8" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>reset</name></member>
      <member refid="classeos_1_1LogLikelihood_1ad6f6ff2a71df17599e033681d64fe454" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>~LogLikelihood</name></member>
      <member refid="classeos_1_1PrivateImplementationPattern_1acf46ec2739c3b0ec9702b9428475876d" prot="public" virt="non-virtual"><scope>eos::LogLikelihood</scope><name>~PrivateImplementationPattern</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
