<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="structeos_1_1hdf5_1_1CompositeCopier_3_010_00_01TypeTuple___00_01Tuple___01_4" kind="struct" prot="public">
    <compoundname>eos::hdf5::CompositeCopier&lt; 0, TypeTuple_, Tuple_ &gt;</compoundname>
    <includes refid="hdf5_8hh" local="no">hdf5.hh</includes>
    <templateparamlist>
      <param>
        <type>typename TypeTuple_</type>
      </param>
      <param>
        <type>typename Tuple_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeos_1_1hdf5_1_1CompositeCopier_3_010_00_01TypeTuple___00_01Tuple___01_4_1a2f1615908f9dc922402fd137d5c8ee76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>static std::ptrdiff_t eos::hdf5::CompositeCopier&lt; 0, TypeTuple_, Tuple_ &gt;::copy_to_hdf5</definition>
        <argsstring>(const TypeTuple_ &amp;types, const Tuple_ &amp;src, char *dest)</argsstring>
        <name>copy_to_hdf5</name>
        <param>
          <type>const TypeTuple_ &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>const Tuple_ &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" line="247" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structeos_1_1hdf5_1_1CompositeCopier_3_010_00_01TypeTuple___00_01Tuple___01_4_1ad4f925fa6486662bc95b459a95ac4c02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>static std::ptrdiff_t eos::hdf5::CompositeCopier&lt; 0, TypeTuple_, Tuple_ &gt;::copy_from_hdf5</definition>
        <argsstring>(const TypeTuple_ &amp;types, const char *src, Tuple_ &amp;dest)</argsstring>
        <name>copy_from_hdf5</name>
        <param>
          <type>const TypeTuple_ &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>Tuple_ &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" line="254" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" bodystart="253" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" line="245" bodyfile="/home/alexshires/EOS/eos-next/eos/utils/hdf5.hh" bodystart="244" bodyend="259"/>
    <listofallmembers>
      <member refid="structeos_1_1hdf5_1_1CompositeCopier_3_010_00_01TypeTuple___00_01Tuple___01_4_1ad4f925fa6486662bc95b459a95ac4c02" prot="public" virt="non-virtual"><scope>eos::hdf5::CompositeCopier&lt; 0, TypeTuple_, Tuple_ &gt;</scope><name>copy_from_hdf5</name></member>
      <member refid="structeos_1_1hdf5_1_1CompositeCopier_3_010_00_01TypeTuple___00_01Tuple___01_4_1a2f1615908f9dc922402fd137d5c8ee76" prot="public" virt="non-virtual"><scope>eos::hdf5::CompositeCopier&lt; 0, TypeTuple_, Tuple_ &gt;</scope><name>copy_to_hdf5</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
