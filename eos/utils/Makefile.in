# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@EOS_ENABLE_PMC_TRUE@am__append_1 = \
@EOS_ENABLE_PMC_TRUE@	population_monte_carlo_sampler.cc population_monte_carlo_sampler.hh

@EOS_ENABLE_PMC_TRUE@am__append_2 = -lpmc -ldl
TESTS = analysis_TEST$(EXEEXT) apply_TEST$(EXEEXT) \
	cartesian-product_TEST$(EXEEXT) chi-squared_TEST$(EXEEXT) \
	ckm_scan_model_TEST$(EXEEXT) derivative_TEST$(EXEEXT) \
	equation_solver_TEST$(EXEEXT) hdf5_TEST$(EXEEXT) \
	hierarchical-clustering_TEST$(EXEEXT) histogram_TEST$(EXEEXT) \
	integrate_TEST$(EXEEXT) kinematic_TEST$(EXEEXT) \
	lcda_TEST$(EXEEXT) log_TEST$(EXEEXT) \
	log_likelihood_TEST$(EXEEXT) log_prior_TEST$(EXEEXT) \
	matrix_TEST$(EXEEXT) markov_chain_TEST$(EXEEXT) \
	markov_chain_sampler_TEST$(EXEEXT) memoise_TEST$(EXEEXT) \
	mutable_TEST$(EXEEXT) observable_set_TEST$(EXEEXT) \
	options_TEST$(EXEEXT) one-of_TEST$(EXEEXT) \
	parameters_TEST$(EXEEXT) polylog_TEST$(EXEEXT) \
	power_of_TEST$(EXEEXT) prior_sampler_TEST$(EXEEXT) \
	proposal_functions_TEST$(EXEEXT) qcd_TEST$(EXEEXT) \
	random_number_generator_TEST$(EXEEXT) rvalue_TEST$(EXEEXT) \
	save_TEST$(EXEEXT) standard_model_TEST$(EXEEXT) \
	top-loops_TEST$(EXEEXT) stringify_TEST$(EXEEXT) \
	verify_TEST$(EXEEXT) welford_TEST$(EXEEXT) \
	wilson_coefficients_TEST$(EXEEXT) \
	wilson-polynomial_TEST$(EXEEXT) \
	wilson_scan_model_TEST$(EXEEXT)
@EOS_ENABLE_PMC_TRUE@am__append_3 = -lpmc -ldl
check_PROGRAMS = $(am__EXEEXT_1)
subdir = eos/utils
DIST_COMMON = $(include_eos_utils_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(include_eos_utilsdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libeosutils_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libeosutils_la_SOURCES_DIST = accumulator.cc accumulator.hh \
	analysis.cc analysis.hh analysis-fwd.hh apply.hh \
	cartesian-product.hh chi-squared.hh chi-squared.cc \
	ckm_scan_model.cc ckm_scan_model.hh cluster.cc cluster.hh \
	complex.hh concrete_observable.hh condition_variable.cc \
	condition_variable.hh derivative.cc derivative.hh \
	destringify.hh diagnostics.cc diagnostics.hh \
	equation_solver.cc equation_solver.hh exception.cc \
	exception.hh hdf5.cc hdf5.hh hdf5-fwd.hh \
	hierarchical-clustering.cc hierarchical-clustering.hh \
	histogram.cc histogram.hh integrate.cc integrate.hh \
	integrate-impl.hh instantiation_policy.hh \
	instantiation_policy-impl.hh kinematic.cc kinematic.hh lcda.cc \
	lcda.hh lock.cc lock.hh log.cc log.hh log_likelihood.cc \
	log_likelihood.hh log_likelihood-fwd.hh log_prior.cc \
	log_prior.hh log_prior-fwd.hh markov_chain.cc markov_chain.hh \
	markov_chain_sampler.cc markov_chain_sampler.hh matrix.hh \
	memoise.cc memoise.hh model.cc model.hh mutable.cc mutable.hh \
	mutable-fwd.hh mutex.cc mutex.hh observable_cache.cc \
	observable_cache.hh observable_set.cc observable_set.hh \
	one-of.hh options.cc options.hh parameters.cc parameters.hh \
	parameters-fwd.hh polylog.cc polylog.hh power_of.hh \
	prior_sampler.cc prior_sampler.hh \
	private_implementation_pattern.hh \
	private_implementation_pattern-impl.hh proposal_functions.cc \
	proposal_functions.hh qcd.cc qcd.hh random_number_generator.cc \
	random_number_generator.hh rvalue.cc rvalue.hh save.hh \
	standard-model.cc standard-model.hh stringify.hh thread.cc \
	thread.hh thread_pool.cc thread_pool.hh ticket.cc ticket.hh \
	top-loops.hh top-loops.cc verify.cc verify.hh welford.cc \
	welford.hh wilson_coefficients.cc wilson_coefficients.hh \
	wilson-polynomial.cc wilson-polynomial.hh wilson_scan_model.cc \
	wilson_scan_model.hh wrapped_forward_iterator.hh \
	wrapped_forward_iterator-fwd.hh \
	wrapped_forward_iterator-impl.hh \
	population_monte_carlo_sampler.cc \
	population_monte_carlo_sampler.hh
@EOS_ENABLE_PMC_TRUE@am__objects_1 =  \
@EOS_ENABLE_PMC_TRUE@	population_monte_carlo_sampler.lo
am_libeosutils_la_OBJECTS = accumulator.lo analysis.lo chi-squared.lo \
	ckm_scan_model.lo cluster.lo condition_variable.lo \
	derivative.lo diagnostics.lo equation_solver.lo exception.lo \
	hdf5.lo hierarchical-clustering.lo histogram.lo integrate.lo \
	kinematic.lo lcda.lo lock.lo log.lo log_likelihood.lo \
	log_prior.lo markov_chain.lo markov_chain_sampler.lo \
	memoise.lo model.lo mutable.lo mutex.lo observable_cache.lo \
	observable_set.lo options.lo parameters.lo polylog.lo \
	prior_sampler.lo proposal_functions.lo qcd.lo \
	random_number_generator.lo rvalue.lo standard-model.lo \
	thread.lo thread_pool.lo ticket.lo top-loops.lo verify.lo \
	welford.lo wilson_coefficients.lo wilson-polynomial.lo \
	wilson_scan_model.lo $(am__objects_1)
libeosutils_la_OBJECTS = $(am_libeosutils_la_OBJECTS)
am__EXEEXT_1 = analysis_TEST$(EXEEXT) apply_TEST$(EXEEXT) \
	cartesian-product_TEST$(EXEEXT) chi-squared_TEST$(EXEEXT) \
	ckm_scan_model_TEST$(EXEEXT) derivative_TEST$(EXEEXT) \
	equation_solver_TEST$(EXEEXT) hdf5_TEST$(EXEEXT) \
	hierarchical-clustering_TEST$(EXEEXT) histogram_TEST$(EXEEXT) \
	integrate_TEST$(EXEEXT) kinematic_TEST$(EXEEXT) \
	lcda_TEST$(EXEEXT) log_TEST$(EXEEXT) \
	log_likelihood_TEST$(EXEEXT) log_prior_TEST$(EXEEXT) \
	matrix_TEST$(EXEEXT) markov_chain_TEST$(EXEEXT) \
	markov_chain_sampler_TEST$(EXEEXT) memoise_TEST$(EXEEXT) \
	mutable_TEST$(EXEEXT) observable_set_TEST$(EXEEXT) \
	options_TEST$(EXEEXT) one-of_TEST$(EXEEXT) \
	parameters_TEST$(EXEEXT) polylog_TEST$(EXEEXT) \
	power_of_TEST$(EXEEXT) prior_sampler_TEST$(EXEEXT) \
	proposal_functions_TEST$(EXEEXT) qcd_TEST$(EXEEXT) \
	random_number_generator_TEST$(EXEEXT) rvalue_TEST$(EXEEXT) \
	save_TEST$(EXEEXT) standard_model_TEST$(EXEEXT) \
	top-loops_TEST$(EXEEXT) stringify_TEST$(EXEEXT) \
	verify_TEST$(EXEEXT) welford_TEST$(EXEEXT) \
	wilson_coefficients_TEST$(EXEEXT) \
	wilson-polynomial_TEST$(EXEEXT) \
	wilson_scan_model_TEST$(EXEEXT)
am_analysis_TEST_OBJECTS = analysis_TEST.$(OBJEXT)
analysis_TEST_OBJECTS = $(am_analysis_TEST_OBJECTS)
analysis_TEST_LDADD = $(LDADD)
analysis_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_apply_TEST_OBJECTS = apply_TEST.$(OBJEXT)
apply_TEST_OBJECTS = $(am_apply_TEST_OBJECTS)
apply_TEST_LDADD = $(LDADD)
apply_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_cartesian_product_TEST_OBJECTS = cartesian-product_TEST.$(OBJEXT)
cartesian_product_TEST_OBJECTS = $(am_cartesian_product_TEST_OBJECTS)
cartesian_product_TEST_LDADD = $(LDADD)
cartesian_product_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_chi_squared_TEST_OBJECTS = chi-squared_TEST.$(OBJEXT)
chi_squared_TEST_OBJECTS = $(am_chi_squared_TEST_OBJECTS)
chi_squared_TEST_LDADD = $(LDADD)
chi_squared_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_ckm_scan_model_TEST_OBJECTS = ckm_scan_model_TEST.$(OBJEXT)
ckm_scan_model_TEST_OBJECTS = $(am_ckm_scan_model_TEST_OBJECTS)
ckm_scan_model_TEST_LDADD = $(LDADD)
ckm_scan_model_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_derivative_TEST_OBJECTS = derivative_TEST.$(OBJEXT)
derivative_TEST_OBJECTS = $(am_derivative_TEST_OBJECTS)
derivative_TEST_LDADD = $(LDADD)
derivative_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_equation_solver_TEST_OBJECTS = equation_solver_TEST.$(OBJEXT)
equation_solver_TEST_OBJECTS = $(am_equation_solver_TEST_OBJECTS)
equation_solver_TEST_LDADD = $(LDADD)
equation_solver_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_hdf5_TEST_OBJECTS = hdf5_TEST.$(OBJEXT)
hdf5_TEST_OBJECTS = $(am_hdf5_TEST_OBJECTS)
hdf5_TEST_LDADD = $(LDADD)
hdf5_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_hierarchical_clustering_TEST_OBJECTS =  \
	hierarchical-clustering_TEST.$(OBJEXT)
hierarchical_clustering_TEST_OBJECTS =  \
	$(am_hierarchical_clustering_TEST_OBJECTS)
hierarchical_clustering_TEST_LDADD = $(LDADD)
hierarchical_clustering_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_histogram_TEST_OBJECTS = histogram_TEST.$(OBJEXT)
histogram_TEST_OBJECTS = $(am_histogram_TEST_OBJECTS)
histogram_TEST_LDADD = $(LDADD)
histogram_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_integrate_TEST_OBJECTS = integrate_TEST.$(OBJEXT)
integrate_TEST_OBJECTS = $(am_integrate_TEST_OBJECTS)
integrate_TEST_LDADD = $(LDADD)
integrate_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_kinematic_TEST_OBJECTS = kinematic_TEST.$(OBJEXT)
kinematic_TEST_OBJECTS = $(am_kinematic_TEST_OBJECTS)
kinematic_TEST_LDADD = $(LDADD)
kinematic_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_lcda_TEST_OBJECTS = lcda_TEST.$(OBJEXT)
lcda_TEST_OBJECTS = $(am_lcda_TEST_OBJECTS)
lcda_TEST_LDADD = $(LDADD)
lcda_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_log_TEST_OBJECTS = log_TEST.$(OBJEXT)
log_TEST_OBJECTS = $(am_log_TEST_OBJECTS)
log_TEST_LDADD = $(LDADD)
log_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_log_likelihood_TEST_OBJECTS = log_likelihood_TEST.$(OBJEXT)
log_likelihood_TEST_OBJECTS = $(am_log_likelihood_TEST_OBJECTS)
log_likelihood_TEST_LDADD = $(LDADD)
log_likelihood_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_log_prior_TEST_OBJECTS = log_prior_TEST.$(OBJEXT)
log_prior_TEST_OBJECTS = $(am_log_prior_TEST_OBJECTS)
log_prior_TEST_LDADD = $(LDADD)
log_prior_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_markov_chain_TEST_OBJECTS = markov_chain_TEST.$(OBJEXT)
markov_chain_TEST_OBJECTS = $(am_markov_chain_TEST_OBJECTS)
markov_chain_TEST_LDADD = $(LDADD)
markov_chain_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_markov_chain_sampler_TEST_OBJECTS =  \
	markov_chain_sampler_TEST.$(OBJEXT)
markov_chain_sampler_TEST_OBJECTS =  \
	$(am_markov_chain_sampler_TEST_OBJECTS)
markov_chain_sampler_TEST_LDADD = $(LDADD)
markov_chain_sampler_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_matrix_TEST_OBJECTS = matrix_TEST.$(OBJEXT)
matrix_TEST_OBJECTS = $(am_matrix_TEST_OBJECTS)
matrix_TEST_LDADD = $(LDADD)
matrix_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_memoise_TEST_OBJECTS = memoise_TEST.$(OBJEXT)
memoise_TEST_OBJECTS = $(am_memoise_TEST_OBJECTS)
memoise_TEST_LDADD = $(LDADD)
memoise_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_mutable_TEST_OBJECTS = mutable_TEST.$(OBJEXT)
mutable_TEST_OBJECTS = $(am_mutable_TEST_OBJECTS)
mutable_TEST_LDADD = $(LDADD)
mutable_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_observable_set_TEST_OBJECTS = observable_set_TEST.$(OBJEXT)
observable_set_TEST_OBJECTS = $(am_observable_set_TEST_OBJECTS)
observable_set_TEST_LDADD = $(LDADD)
observable_set_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_one_of_TEST_OBJECTS = one-of_TEST.$(OBJEXT)
one_of_TEST_OBJECTS = $(am_one_of_TEST_OBJECTS)
one_of_TEST_LDADD = $(LDADD)
one_of_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_options_TEST_OBJECTS = options_TEST.$(OBJEXT)
options_TEST_OBJECTS = $(am_options_TEST_OBJECTS)
options_TEST_LDADD = $(LDADD)
options_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_parameters_TEST_OBJECTS = parameters_TEST.$(OBJEXT)
parameters_TEST_OBJECTS = $(am_parameters_TEST_OBJECTS)
parameters_TEST_LDADD = $(LDADD)
parameters_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_polylog_TEST_OBJECTS = polylog_TEST.$(OBJEXT)
polylog_TEST_OBJECTS = $(am_polylog_TEST_OBJECTS)
polylog_TEST_LDADD = $(LDADD)
polylog_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_power_of_TEST_OBJECTS = power_of_TEST.$(OBJEXT)
power_of_TEST_OBJECTS = $(am_power_of_TEST_OBJECTS)
power_of_TEST_LDADD = $(LDADD)
power_of_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_prior_sampler_TEST_OBJECTS = prior_sampler_TEST.$(OBJEXT)
prior_sampler_TEST_OBJECTS = $(am_prior_sampler_TEST_OBJECTS)
prior_sampler_TEST_LDADD = $(LDADD)
prior_sampler_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_proposal_functions_TEST_OBJECTS =  \
	proposal_functions_TEST.$(OBJEXT)
proposal_functions_TEST_OBJECTS =  \
	$(am_proposal_functions_TEST_OBJECTS)
proposal_functions_TEST_LDADD = $(LDADD)
proposal_functions_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_qcd_TEST_OBJECTS = qcd_TEST.$(OBJEXT)
qcd_TEST_OBJECTS = $(am_qcd_TEST_OBJECTS)
qcd_TEST_LDADD = $(LDADD)
qcd_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_random_number_generator_TEST_OBJECTS =  \
	random_number_generator_TEST.$(OBJEXT)
random_number_generator_TEST_OBJECTS =  \
	$(am_random_number_generator_TEST_OBJECTS)
random_number_generator_TEST_LDADD = $(LDADD)
random_number_generator_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_rvalue_TEST_OBJECTS = rvalue_TEST.$(OBJEXT)
rvalue_TEST_OBJECTS = $(am_rvalue_TEST_OBJECTS)
rvalue_TEST_LDADD = $(LDADD)
rvalue_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_save_TEST_OBJECTS = save_TEST.$(OBJEXT)
save_TEST_OBJECTS = $(am_save_TEST_OBJECTS)
save_TEST_LDADD = $(LDADD)
save_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_standard_model_TEST_OBJECTS = standard_model_TEST.$(OBJEXT)
standard_model_TEST_OBJECTS = $(am_standard_model_TEST_OBJECTS)
standard_model_TEST_LDADD = $(LDADD)
standard_model_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_stringify_TEST_OBJECTS = stringify_TEST.$(OBJEXT)
stringify_TEST_OBJECTS = $(am_stringify_TEST_OBJECTS)
stringify_TEST_LDADD = $(LDADD)
stringify_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_top_loops_TEST_OBJECTS = top-loops_TEST.$(OBJEXT)
top_loops_TEST_OBJECTS = $(am_top_loops_TEST_OBJECTS)
top_loops_TEST_LDADD = $(LDADD)
top_loops_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_verify_TEST_OBJECTS = verify_TEST.$(OBJEXT)
verify_TEST_OBJECTS = $(am_verify_TEST_OBJECTS)
verify_TEST_LDADD = $(LDADD)
verify_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_welford_TEST_OBJECTS = welford_TEST.$(OBJEXT)
welford_TEST_OBJECTS = $(am_welford_TEST_OBJECTS)
welford_TEST_LDADD = $(LDADD)
welford_TEST_DEPENDENCIES = $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la \
	$(am__DEPENDENCIES_1)
am_wilson_polynomial_TEST_OBJECTS = wilson-polynomial_TEST.$(OBJEXT)
wilson_polynomial_TEST_OBJECTS = $(am_wilson_polynomial_TEST_OBJECTS)
wilson_polynomial_TEST_LDADD = $(LDADD)
wilson_polynomial_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_wilson_coefficients_TEST_OBJECTS =  \
	wilson_coefficients_TEST.$(OBJEXT)
wilson_coefficients_TEST_OBJECTS =  \
	$(am_wilson_coefficients_TEST_OBJECTS)
wilson_coefficients_TEST_LDADD = $(LDADD)
wilson_coefficients_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
am_wilson_scan_model_TEST_OBJECTS = wilson_scan_model_TEST.$(OBJEXT)
wilson_scan_model_TEST_OBJECTS = $(am_wilson_scan_model_TEST_OBJECTS)
wilson_scan_model_TEST_LDADD = $(LDADD)
wilson_scan_model_TEST_DEPENDENCIES =  \
	$(top_builddir)/test/libeostest.a libeosutils.la \
	$(top_builddir)/eos/libeos.la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libeosutils_la_SOURCES) $(analysis_TEST_SOURCES) \
	$(apply_TEST_SOURCES) $(cartesian_product_TEST_SOURCES) \
	$(chi_squared_TEST_SOURCES) $(ckm_scan_model_TEST_SOURCES) \
	$(derivative_TEST_SOURCES) $(equation_solver_TEST_SOURCES) \
	$(hdf5_TEST_SOURCES) $(hierarchical_clustering_TEST_SOURCES) \
	$(histogram_TEST_SOURCES) $(integrate_TEST_SOURCES) \
	$(kinematic_TEST_SOURCES) $(lcda_TEST_SOURCES) \
	$(log_TEST_SOURCES) $(log_likelihood_TEST_SOURCES) \
	$(log_prior_TEST_SOURCES) $(markov_chain_TEST_SOURCES) \
	$(markov_chain_sampler_TEST_SOURCES) $(matrix_TEST_SOURCES) \
	$(memoise_TEST_SOURCES) $(mutable_TEST_SOURCES) \
	$(observable_set_TEST_SOURCES) $(one_of_TEST_SOURCES) \
	$(options_TEST_SOURCES) $(parameters_TEST_SOURCES) \
	$(polylog_TEST_SOURCES) $(power_of_TEST_SOURCES) \
	$(prior_sampler_TEST_SOURCES) \
	$(proposal_functions_TEST_SOURCES) $(qcd_TEST_SOURCES) \
	$(random_number_generator_TEST_SOURCES) $(rvalue_TEST_SOURCES) \
	$(save_TEST_SOURCES) $(standard_model_TEST_SOURCES) \
	$(stringify_TEST_SOURCES) $(top_loops_TEST_SOURCES) \
	$(verify_TEST_SOURCES) $(welford_TEST_SOURCES) \
	$(wilson_polynomial_TEST_SOURCES) \
	$(wilson_coefficients_TEST_SOURCES) \
	$(wilson_scan_model_TEST_SOURCES)
DIST_SOURCES = $(am__libeosutils_la_SOURCES_DIST) \
	$(analysis_TEST_SOURCES) $(apply_TEST_SOURCES) \
	$(cartesian_product_TEST_SOURCES) $(chi_squared_TEST_SOURCES) \
	$(ckm_scan_model_TEST_SOURCES) $(derivative_TEST_SOURCES) \
	$(equation_solver_TEST_SOURCES) $(hdf5_TEST_SOURCES) \
	$(hierarchical_clustering_TEST_SOURCES) \
	$(histogram_TEST_SOURCES) $(integrate_TEST_SOURCES) \
	$(kinematic_TEST_SOURCES) $(lcda_TEST_SOURCES) \
	$(log_TEST_SOURCES) $(log_likelihood_TEST_SOURCES) \
	$(log_prior_TEST_SOURCES) $(markov_chain_TEST_SOURCES) \
	$(markov_chain_sampler_TEST_SOURCES) $(matrix_TEST_SOURCES) \
	$(memoise_TEST_SOURCES) $(mutable_TEST_SOURCES) \
	$(observable_set_TEST_SOURCES) $(one_of_TEST_SOURCES) \
	$(options_TEST_SOURCES) $(parameters_TEST_SOURCES) \
	$(polylog_TEST_SOURCES) $(power_of_TEST_SOURCES) \
	$(prior_sampler_TEST_SOURCES) \
	$(proposal_functions_TEST_SOURCES) $(qcd_TEST_SOURCES) \
	$(random_number_generator_TEST_SOURCES) $(rvalue_TEST_SOURCES) \
	$(save_TEST_SOURCES) $(standard_model_TEST_SOURCES) \
	$(stringify_TEST_SOURCES) $(top_loops_TEST_SOURCES) \
	$(verify_TEST_SOURCES) $(welford_TEST_SOURCES) \
	$(wilson_polynomial_TEST_SOURCES) \
	$(wilson_coefficients_TEST_SOURCES) \
	$(wilson_scan_model_TEST_SOURCES)
HEADERS = $(include_eos_utils_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GITHEAD = @GITHEAD@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLEANFILES = \
	*~ \
	hdf5_TEST-attribute.hdf5 \
	hdf5_TEST-file.hdf5 \
	hdf5_TEST-copy.hdf5 \
	markov_chain_sampler_TEST.hdf5 \
	markov_chain_sampler_TEST-global-local.hdf5 \
	markov_chain_sampler_TEST-build-global-local.hdf5 \
	markov_chain_sampler_TEST-global-local-resume.hdf5 \
	prior_sampler_TEST.hdf5 \
	proposal_functions_TEST-rdwr.hdf5 \
	proposal_functions_TEST-block-decomposition.hdf5

MAINTAINERCLEANFILES = Makefile.in
AM_CXXFLAGS = -I$(top_srcdir) -std=c++0x -Wall -Wextra -pedantic
lib_LTLIBRARIES = libeosutils.la
libeosutils_la_SOURCES = accumulator.cc accumulator.hh analysis.cc \
	analysis.hh analysis-fwd.hh apply.hh cartesian-product.hh \
	chi-squared.hh chi-squared.cc ckm_scan_model.cc \
	ckm_scan_model.hh cluster.cc cluster.hh complex.hh \
	concrete_observable.hh condition_variable.cc \
	condition_variable.hh derivative.cc derivative.hh \
	destringify.hh diagnostics.cc diagnostics.hh \
	equation_solver.cc equation_solver.hh exception.cc \
	exception.hh hdf5.cc hdf5.hh hdf5-fwd.hh \
	hierarchical-clustering.cc hierarchical-clustering.hh \
	histogram.cc histogram.hh integrate.cc integrate.hh \
	integrate-impl.hh instantiation_policy.hh \
	instantiation_policy-impl.hh kinematic.cc kinematic.hh lcda.cc \
	lcda.hh lock.cc lock.hh log.cc log.hh log_likelihood.cc \
	log_likelihood.hh log_likelihood-fwd.hh log_prior.cc \
	log_prior.hh log_prior-fwd.hh markov_chain.cc markov_chain.hh \
	markov_chain_sampler.cc markov_chain_sampler.hh matrix.hh \
	memoise.cc memoise.hh model.cc model.hh mutable.cc mutable.hh \
	mutable-fwd.hh mutex.cc mutex.hh observable_cache.cc \
	observable_cache.hh observable_set.cc observable_set.hh \
	one-of.hh options.cc options.hh parameters.cc parameters.hh \
	parameters-fwd.hh polylog.cc polylog.hh power_of.hh \
	prior_sampler.cc prior_sampler.hh \
	private_implementation_pattern.hh \
	private_implementation_pattern-impl.hh proposal_functions.cc \
	proposal_functions.hh qcd.cc qcd.hh random_number_generator.cc \
	random_number_generator.hh rvalue.cc rvalue.hh save.hh \
	standard-model.cc standard-model.hh stringify.hh thread.cc \
	thread.hh thread_pool.cc thread_pool.hh ticket.cc ticket.hh \
	top-loops.hh top-loops.cc verify.cc verify.hh welford.cc \
	welford.hh wilson_coefficients.cc wilson_coefficients.hh \
	wilson-polynomial.cc wilson-polynomial.hh wilson_scan_model.cc \
	wilson_scan_model.hh wrapped_forward_iterator.hh \
	wrapped_forward_iterator-fwd.hh \
	wrapped_forward_iterator-impl.hh $(am__append_1)
libeosutils_la_LIBADD = -lpthread -lgsl -lgslcblas -lm -lhdf5 \
	-lhdf5_hl -lMinuit2 $(am__append_2)
EXTRA_DIST = \
	polylog_TEST_dilog.bin \
	polylog_TEST_trilog.bin \
	polylog_TEST_z.bin

include_eos_utilsdir = $(includedir)/eos/utils
include_eos_utils_HEADERS = \
	accumulator.hh \
	analysis.hh analysis-fwd.hh \
	apply.hh \
	cartesian-product.hh \
	chi-squared.hh \
	ckm_scan_model.hh \
	complex.hh \
	concrete_observable.hh \
	condition_variable.hh \
	derivative.hh \
	destringify.hh \
	equation_solver.hh \
	exception.hh \
	hdf5.hh \
	hierarchical-clustering.hh \
	histogram.hh \
	integrate.hh \
	instantiation_policy.hh instantiation_policy-impl.hh \
	kinematic.hh \
	lcda.hh \
	lock.hh \
	log.hh \
	log_likelihood.hh log_likelihood-fwd.hh \
	log_prior.hh log_prior-fwd.hh \
	markov_chain.hh \
	markov_chain_sampler.hh \
	matrix.hh \
	memoise.hh \
	model.hh \
	mutex.hh \
	observable_cache.hh \
	observable_set.hh \
	one-of.hh \
	options.hh \
	parameters.hh \
	power_of.hh \
	prior_sampler.hh \
	private_implementation_pattern.hh private_implementation_pattern-impl.hh \
	proposal_functions.hh \
	qcd.hh \
	random_number_generator.cc random_number_generator.hh \
	rvalue.hh \
	save.hh \
	standard-model.hh \
	stringify.hh \
	thread.hh \
	thread_pool.hh \
	ticket.hh \
	top-loops.hh \
	verify.hh \
	welford.hh \
	wilson_coefficients.hh \
	wilson-polynomial.hh \
	wilson_scan_model.hh \
	wrapped_forward_iterator.hh wrapped_forward_iterator-fwd.hh wrapped_forward_iterator-impl.hh

LDADD = -lgsl -lhdf5 -lMinuit2 $(top_builddir)/test/libeostest.a \
	libeosutils.la $(top_builddir)/eos/libeos.la $(am__append_3)
analysis_TEST_SOURCES = analysis_TEST.cc analysis_TEST.hh
apply_TEST_SOURCES = apply_TEST.cc
cartesian_product_TEST_SOURCES = cartesian-product_TEST.cc
chi_squared_TEST_SOURCES = chi-squared_TEST.cc
ckm_scan_model_TEST_SOURCES = ckm_scan_model_TEST.cc
derivative_TEST_SOURCES = derivative_TEST.cc
hdf5_TEST_SOURCES = hdf5_TEST.cc
hierarchical_clustering_TEST_SOURCES = hierarchical-clustering_TEST.cc
equation_solver_TEST_SOURCES = equation_solver_TEST.cc
histogram_TEST_SOURCES = histogram_TEST.cc
integrate_TEST_SOURCES = integrate_TEST.cc
kinematic_TEST_SOURCES = kinematic_TEST.cc
lcda_TEST_SOURCES = lcda_TEST.cc
log_TEST_SOURCES = log_TEST.cc
log_likelihood_TEST_SOURCES = log_likelihood_TEST.cc
log_prior_TEST_SOURCES = log_prior_TEST.cc
matrix_TEST_SOURCES = matrix_TEST.cc
markov_chain_TEST_SOURCES = markov_chain_TEST.cc
markov_chain_sampler_TEST_SOURCES = markov_chain_sampler_TEST.cc
memoise_TEST_SOURCES = memoise_TEST.cc
mutable_TEST_SOURCES = mutable_TEST.cc
observable_set_TEST_SOURCES = observable_set_TEST.cc
one_of_TEST_SOURCES = one-of_TEST.cc
options_TEST_SOURCES = options_TEST.cc
parameters_TEST_SOURCES = parameters_TEST.cc
polylog_TEST_SOURCES = polylog_TEST.cc
power_of_TEST_SOURCES = power_of_TEST.cc
prior_sampler_TEST_SOURCES = prior_sampler_TEST.cc
proposal_functions_TEST_SOURCES = proposal_functions_TEST.cc
qcd_TEST_SOURCES = qcd_TEST.cc
random_number_generator_TEST_SOURCES = random_number_generator_TEST.cc
rvalue_TEST_SOURCES = rvalue_TEST.cc
save_TEST_SOURCES = save_TEST.cc
stringify_TEST_SOURCES = stringify_TEST.cc
standard_model_TEST_SOURCES = standard_model_TEST.cc
top_loops_TEST_SOURCES = top-loops_TEST.cc
verify_TEST_SOURCES = verify_TEST.cc
welford_TEST_SOURCES = welford_TEST.cc
wilson_coefficients_TEST_SOURCES = wilson_coefficients_TEST.cc
wilson_polynomial_TEST_SOURCES = wilson-polynomial_TEST.cc
wilson_scan_model_TEST_SOURCES = wilson_scan_model_TEST.cc
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu eos/utils/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu eos/utils/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libeosutils.la: $(libeosutils_la_OBJECTS) $(libeosutils_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libeosutils_la_OBJECTS) $(libeosutils_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
analysis_TEST$(EXEEXT): $(analysis_TEST_OBJECTS) $(analysis_TEST_DEPENDENCIES) 
	@rm -f analysis_TEST$(EXEEXT)
	$(CXXLINK) $(analysis_TEST_OBJECTS) $(analysis_TEST_LDADD) $(LIBS)
apply_TEST$(EXEEXT): $(apply_TEST_OBJECTS) $(apply_TEST_DEPENDENCIES) 
	@rm -f apply_TEST$(EXEEXT)
	$(CXXLINK) $(apply_TEST_OBJECTS) $(apply_TEST_LDADD) $(LIBS)
cartesian-product_TEST$(EXEEXT): $(cartesian_product_TEST_OBJECTS) $(cartesian_product_TEST_DEPENDENCIES) 
	@rm -f cartesian-product_TEST$(EXEEXT)
	$(CXXLINK) $(cartesian_product_TEST_OBJECTS) $(cartesian_product_TEST_LDADD) $(LIBS)
chi-squared_TEST$(EXEEXT): $(chi_squared_TEST_OBJECTS) $(chi_squared_TEST_DEPENDENCIES) 
	@rm -f chi-squared_TEST$(EXEEXT)
	$(CXXLINK) $(chi_squared_TEST_OBJECTS) $(chi_squared_TEST_LDADD) $(LIBS)
ckm_scan_model_TEST$(EXEEXT): $(ckm_scan_model_TEST_OBJECTS) $(ckm_scan_model_TEST_DEPENDENCIES) 
	@rm -f ckm_scan_model_TEST$(EXEEXT)
	$(CXXLINK) $(ckm_scan_model_TEST_OBJECTS) $(ckm_scan_model_TEST_LDADD) $(LIBS)
derivative_TEST$(EXEEXT): $(derivative_TEST_OBJECTS) $(derivative_TEST_DEPENDENCIES) 
	@rm -f derivative_TEST$(EXEEXT)
	$(CXXLINK) $(derivative_TEST_OBJECTS) $(derivative_TEST_LDADD) $(LIBS)
equation_solver_TEST$(EXEEXT): $(equation_solver_TEST_OBJECTS) $(equation_solver_TEST_DEPENDENCIES) 
	@rm -f equation_solver_TEST$(EXEEXT)
	$(CXXLINK) $(equation_solver_TEST_OBJECTS) $(equation_solver_TEST_LDADD) $(LIBS)
hdf5_TEST$(EXEEXT): $(hdf5_TEST_OBJECTS) $(hdf5_TEST_DEPENDENCIES) 
	@rm -f hdf5_TEST$(EXEEXT)
	$(CXXLINK) $(hdf5_TEST_OBJECTS) $(hdf5_TEST_LDADD) $(LIBS)
hierarchical-clustering_TEST$(EXEEXT): $(hierarchical_clustering_TEST_OBJECTS) $(hierarchical_clustering_TEST_DEPENDENCIES) 
	@rm -f hierarchical-clustering_TEST$(EXEEXT)
	$(CXXLINK) $(hierarchical_clustering_TEST_OBJECTS) $(hierarchical_clustering_TEST_LDADD) $(LIBS)
histogram_TEST$(EXEEXT): $(histogram_TEST_OBJECTS) $(histogram_TEST_DEPENDENCIES) 
	@rm -f histogram_TEST$(EXEEXT)
	$(CXXLINK) $(histogram_TEST_OBJECTS) $(histogram_TEST_LDADD) $(LIBS)
integrate_TEST$(EXEEXT): $(integrate_TEST_OBJECTS) $(integrate_TEST_DEPENDENCIES) 
	@rm -f integrate_TEST$(EXEEXT)
	$(CXXLINK) $(integrate_TEST_OBJECTS) $(integrate_TEST_LDADD) $(LIBS)
kinematic_TEST$(EXEEXT): $(kinematic_TEST_OBJECTS) $(kinematic_TEST_DEPENDENCIES) 
	@rm -f kinematic_TEST$(EXEEXT)
	$(CXXLINK) $(kinematic_TEST_OBJECTS) $(kinematic_TEST_LDADD) $(LIBS)
lcda_TEST$(EXEEXT): $(lcda_TEST_OBJECTS) $(lcda_TEST_DEPENDENCIES) 
	@rm -f lcda_TEST$(EXEEXT)
	$(CXXLINK) $(lcda_TEST_OBJECTS) $(lcda_TEST_LDADD) $(LIBS)
log_TEST$(EXEEXT): $(log_TEST_OBJECTS) $(log_TEST_DEPENDENCIES) 
	@rm -f log_TEST$(EXEEXT)
	$(CXXLINK) $(log_TEST_OBJECTS) $(log_TEST_LDADD) $(LIBS)
log_likelihood_TEST$(EXEEXT): $(log_likelihood_TEST_OBJECTS) $(log_likelihood_TEST_DEPENDENCIES) 
	@rm -f log_likelihood_TEST$(EXEEXT)
	$(CXXLINK) $(log_likelihood_TEST_OBJECTS) $(log_likelihood_TEST_LDADD) $(LIBS)
log_prior_TEST$(EXEEXT): $(log_prior_TEST_OBJECTS) $(log_prior_TEST_DEPENDENCIES) 
	@rm -f log_prior_TEST$(EXEEXT)
	$(CXXLINK) $(log_prior_TEST_OBJECTS) $(log_prior_TEST_LDADD) $(LIBS)
markov_chain_TEST$(EXEEXT): $(markov_chain_TEST_OBJECTS) $(markov_chain_TEST_DEPENDENCIES) 
	@rm -f markov_chain_TEST$(EXEEXT)
	$(CXXLINK) $(markov_chain_TEST_OBJECTS) $(markov_chain_TEST_LDADD) $(LIBS)
markov_chain_sampler_TEST$(EXEEXT): $(markov_chain_sampler_TEST_OBJECTS) $(markov_chain_sampler_TEST_DEPENDENCIES) 
	@rm -f markov_chain_sampler_TEST$(EXEEXT)
	$(CXXLINK) $(markov_chain_sampler_TEST_OBJECTS) $(markov_chain_sampler_TEST_LDADD) $(LIBS)
matrix_TEST$(EXEEXT): $(matrix_TEST_OBJECTS) $(matrix_TEST_DEPENDENCIES) 
	@rm -f matrix_TEST$(EXEEXT)
	$(CXXLINK) $(matrix_TEST_OBJECTS) $(matrix_TEST_LDADD) $(LIBS)
memoise_TEST$(EXEEXT): $(memoise_TEST_OBJECTS) $(memoise_TEST_DEPENDENCIES) 
	@rm -f memoise_TEST$(EXEEXT)
	$(CXXLINK) $(memoise_TEST_OBJECTS) $(memoise_TEST_LDADD) $(LIBS)
mutable_TEST$(EXEEXT): $(mutable_TEST_OBJECTS) $(mutable_TEST_DEPENDENCIES) 
	@rm -f mutable_TEST$(EXEEXT)
	$(CXXLINK) $(mutable_TEST_OBJECTS) $(mutable_TEST_LDADD) $(LIBS)
observable_set_TEST$(EXEEXT): $(observable_set_TEST_OBJECTS) $(observable_set_TEST_DEPENDENCIES) 
	@rm -f observable_set_TEST$(EXEEXT)
	$(CXXLINK) $(observable_set_TEST_OBJECTS) $(observable_set_TEST_LDADD) $(LIBS)
one-of_TEST$(EXEEXT): $(one_of_TEST_OBJECTS) $(one_of_TEST_DEPENDENCIES) 
	@rm -f one-of_TEST$(EXEEXT)
	$(CXXLINK) $(one_of_TEST_OBJECTS) $(one_of_TEST_LDADD) $(LIBS)
options_TEST$(EXEEXT): $(options_TEST_OBJECTS) $(options_TEST_DEPENDENCIES) 
	@rm -f options_TEST$(EXEEXT)
	$(CXXLINK) $(options_TEST_OBJECTS) $(options_TEST_LDADD) $(LIBS)
parameters_TEST$(EXEEXT): $(parameters_TEST_OBJECTS) $(parameters_TEST_DEPENDENCIES) 
	@rm -f parameters_TEST$(EXEEXT)
	$(CXXLINK) $(parameters_TEST_OBJECTS) $(parameters_TEST_LDADD) $(LIBS)
polylog_TEST$(EXEEXT): $(polylog_TEST_OBJECTS) $(polylog_TEST_DEPENDENCIES) 
	@rm -f polylog_TEST$(EXEEXT)
	$(CXXLINK) $(polylog_TEST_OBJECTS) $(polylog_TEST_LDADD) $(LIBS)
power_of_TEST$(EXEEXT): $(power_of_TEST_OBJECTS) $(power_of_TEST_DEPENDENCIES) 
	@rm -f power_of_TEST$(EXEEXT)
	$(CXXLINK) $(power_of_TEST_OBJECTS) $(power_of_TEST_LDADD) $(LIBS)
prior_sampler_TEST$(EXEEXT): $(prior_sampler_TEST_OBJECTS) $(prior_sampler_TEST_DEPENDENCIES) 
	@rm -f prior_sampler_TEST$(EXEEXT)
	$(CXXLINK) $(prior_sampler_TEST_OBJECTS) $(prior_sampler_TEST_LDADD) $(LIBS)
proposal_functions_TEST$(EXEEXT): $(proposal_functions_TEST_OBJECTS) $(proposal_functions_TEST_DEPENDENCIES) 
	@rm -f proposal_functions_TEST$(EXEEXT)
	$(CXXLINK) $(proposal_functions_TEST_OBJECTS) $(proposal_functions_TEST_LDADD) $(LIBS)
qcd_TEST$(EXEEXT): $(qcd_TEST_OBJECTS) $(qcd_TEST_DEPENDENCIES) 
	@rm -f qcd_TEST$(EXEEXT)
	$(CXXLINK) $(qcd_TEST_OBJECTS) $(qcd_TEST_LDADD) $(LIBS)
random_number_generator_TEST$(EXEEXT): $(random_number_generator_TEST_OBJECTS) $(random_number_generator_TEST_DEPENDENCIES) 
	@rm -f random_number_generator_TEST$(EXEEXT)
	$(CXXLINK) $(random_number_generator_TEST_OBJECTS) $(random_number_generator_TEST_LDADD) $(LIBS)
rvalue_TEST$(EXEEXT): $(rvalue_TEST_OBJECTS) $(rvalue_TEST_DEPENDENCIES) 
	@rm -f rvalue_TEST$(EXEEXT)
	$(CXXLINK) $(rvalue_TEST_OBJECTS) $(rvalue_TEST_LDADD) $(LIBS)
save_TEST$(EXEEXT): $(save_TEST_OBJECTS) $(save_TEST_DEPENDENCIES) 
	@rm -f save_TEST$(EXEEXT)
	$(CXXLINK) $(save_TEST_OBJECTS) $(save_TEST_LDADD) $(LIBS)
standard_model_TEST$(EXEEXT): $(standard_model_TEST_OBJECTS) $(standard_model_TEST_DEPENDENCIES) 
	@rm -f standard_model_TEST$(EXEEXT)
	$(CXXLINK) $(standard_model_TEST_OBJECTS) $(standard_model_TEST_LDADD) $(LIBS)
stringify_TEST$(EXEEXT): $(stringify_TEST_OBJECTS) $(stringify_TEST_DEPENDENCIES) 
	@rm -f stringify_TEST$(EXEEXT)
	$(CXXLINK) $(stringify_TEST_OBJECTS) $(stringify_TEST_LDADD) $(LIBS)
top-loops_TEST$(EXEEXT): $(top_loops_TEST_OBJECTS) $(top_loops_TEST_DEPENDENCIES) 
	@rm -f top-loops_TEST$(EXEEXT)
	$(CXXLINK) $(top_loops_TEST_OBJECTS) $(top_loops_TEST_LDADD) $(LIBS)
verify_TEST$(EXEEXT): $(verify_TEST_OBJECTS) $(verify_TEST_DEPENDENCIES) 
	@rm -f verify_TEST$(EXEEXT)
	$(CXXLINK) $(verify_TEST_OBJECTS) $(verify_TEST_LDADD) $(LIBS)
welford_TEST$(EXEEXT): $(welford_TEST_OBJECTS) $(welford_TEST_DEPENDENCIES) 
	@rm -f welford_TEST$(EXEEXT)
	$(CXXLINK) $(welford_TEST_OBJECTS) $(welford_TEST_LDADD) $(LIBS)
wilson-polynomial_TEST$(EXEEXT): $(wilson_polynomial_TEST_OBJECTS) $(wilson_polynomial_TEST_DEPENDENCIES) 
	@rm -f wilson-polynomial_TEST$(EXEEXT)
	$(CXXLINK) $(wilson_polynomial_TEST_OBJECTS) $(wilson_polynomial_TEST_LDADD) $(LIBS)
wilson_coefficients_TEST$(EXEEXT): $(wilson_coefficients_TEST_OBJECTS) $(wilson_coefficients_TEST_DEPENDENCIES) 
	@rm -f wilson_coefficients_TEST$(EXEEXT)
	$(CXXLINK) $(wilson_coefficients_TEST_OBJECTS) $(wilson_coefficients_TEST_LDADD) $(LIBS)
wilson_scan_model_TEST$(EXEEXT): $(wilson_scan_model_TEST_OBJECTS) $(wilson_scan_model_TEST_DEPENDENCIES) 
	@rm -f wilson_scan_model_TEST$(EXEEXT)
	$(CXXLINK) $(wilson_scan_model_TEST_OBJECTS) $(wilson_scan_model_TEST_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accumulator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/analysis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/analysis_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/apply_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cartesian-product_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chi-squared.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chi-squared_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ckm_scan_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ckm_scan_model_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cluster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/condition_variable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/derivative.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/derivative_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diagnostics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equation_solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equation_solver_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exception.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hdf5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hdf5_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hierarchical-clustering.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hierarchical-clustering_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histogram.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histogram_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/integrate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/integrate_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kinematic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kinematic_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lcda.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lcda_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log_likelihood.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log_likelihood_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log_prior.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log_prior_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/markov_chain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/markov_chain_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/markov_chain_sampler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/markov_chain_sampler_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memoise.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memoise_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutable_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observable_cache.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observable_set.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observable_set_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/one-of_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameters.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameters_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polylog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polylog_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/population_monte_carlo_sampler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/power_of_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prior_sampler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prior_sampler_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proposal_functions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proposal_functions_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qcd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qcd_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random_number_generator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random_number_generator_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvalue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvalue_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/save_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/standard-model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/standard_model_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringify_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ticket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/top-loops.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/top-loops_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/welford.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/welford_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson-polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson-polynomial_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson_coefficients.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson_coefficients_TEST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson_scan_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wilson_scan_model_TEST.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-include_eos_utilsHEADERS: $(include_eos_utils_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_eos_utilsdir)" || $(MKDIR_P) "$(DESTDIR)$(include_eos_utilsdir)"
	@list='$(include_eos_utils_HEADERS)'; test -n "$(include_eos_utilsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(include_eos_utilsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(include_eos_utilsdir)" || exit $$?; \
	done

uninstall-include_eos_utilsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_eos_utils_HEADERS)'; test -n "$(include_eos_utilsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(include_eos_utilsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(include_eos_utilsdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(include_eos_utilsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-include_eos_utilsHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-include_eos_utilsHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-include_eos_utilsHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-include_eos_utilsHEADERS \
	uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
